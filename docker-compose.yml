version: "2.1"

services:
  postgres:
    image: postgres
    container_name: postgres
    ports:
      - 5432:5432
    restart: on-failure
    build: ./configs/postgres
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./configs/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "100m"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 15
    networks:
      - locker-net
  
  pgadmin:
    image: pgadmin
    container_name: pgadmin
    restart: on-failure
    build: ./configs/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 5050:80
    networks:
      - locker-net
  
  couchdb:
    image: couchdb
    container_name: couchdb
    build: ./configs/couchdb
    environment:
      COUCHDB_USER: admin
      COUCHDB_PASSWORD: admin
    ports:
      - "5984:5984"
      - "5986:5986"
    networks:
      - locker-net
    cap_add:
      - SYS_NICE
      - SYS_RESOURCE
    restart: on-failure
    healthcheck:
      test: curl http://localhost:5984/_up > /dev/null
      interval: 10s
      timeout: 5s
      retries: 15

  couch-profile:
    image: couch-profile
    container_name: couch-profile
    build: 
      dockerfile: ./configs/couchdb/Dockerfile.InitProfile
      context: ./
    environment:
      HOST: couchdb:5984
      COUCHDB_USER: admin
      COUCHDB_PASSWORD: admin
    volumes:
      - ./configs/couchdb/profiles/:/profiles
    depends_on:
      couchdb:
        condition: service_healthy
    networks:
      - locker-net

networks:
  locker-net:
    name: locker-net
